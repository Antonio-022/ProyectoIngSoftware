@page "/citations"
<PageTitle>Citaciónes</PageTitle>

<h3 class="text-center my-3">Citaciónes Alumno</h3>

<div class="container-citaciónes mx-3 px-3 ">
    <div class="row">
        <div class="col">
            <table class="table  table-postulation  dt-responsive" id="CitationsTable" style="width: 100%;">
                <thead>
                    <tr>
                        <th >#</th>
                        <th>Materia</th>
                        <th>Profesor</th>
                        <th >Fecha Citación</th>
                        <th >Periodo Acad.</th>
                        <th >Estado</th>
                        <th >Detalle</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <th >1</th>
                        <td> MATEMATICAS</td>
                        <td>ROBERTO CESPEDES</td>
                        <td>28-06-2022</td>
                        <td>1° TRIMESTRE</td>
                        <td>
                            <LabelsStatus tipo="1" txt="realizada"></LabelsStatus>
                        </td>
                        <td>
                            <button class="btn btn-primary btn-sm" style="font-size: 12px;"> ver detalle ></button>
                        </td>
                    </tr>
                    <tr>
                        <th >1</th>
                        <td> MATEMATICAS</td>
                        <td>ROBERTO CESPEDES</td>
                        <td>28-06-2022</td>
                        <td>1° TRIMESTRE</td>
                        <td>
                            <LabelsStatus tipo="0" txt="no realizada"></LabelsStatus>
                        </td>
                        <td>
                            <button class="btn btn-primary btn-sm" style="font-size: 12px;"> ver detalle ></button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

</div>

@code {
    [Inject]
    IDataTable dataTable { get; set; }
    [Inject]
    NavigationManager navigation { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await DataTableenabled();


        }

    }

    public async Task DataTableenabled()
    {
        List<Columdef> columdef = new(){
             new Columdef()
             {
                 responsivePriority = 1,
                 targets = 0
             },
                new Columdef()
             {
                 responsivePriority = 10001,
                 targets = 1
             },
              new Columdef()
             {
                 responsivePriority = 10001,
                 targets = 2
             },
              new Columdef()
             {
                 responsivePriority = 10001,
                 targets = 3
             },
              new Columdef()
             {
                 responsivePriority = 10001,
                 targets = 4
             },
              new Columdef()
             {
                 responsivePriority = 1,
                 targets = 5
             }
             ,
              new Columdef()
             {
                 responsivePriority = 1,
                 targets = 6
             }
        };
        await dataTable.Init("#CitationsTable", columdef, true, false, false, false, false);

    }
    public void Dispose()
    {

        dataTable.Destroy("#CitationsTable");
    }
}
