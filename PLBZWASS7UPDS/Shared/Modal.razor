@inject IJSRuntime JSRuntime
<div class="modal fade" id="@id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" data-backdrop="static">
    <div class="modal-dialog @_sizeModal">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@titulo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
            @*   <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            <button type="button" class="btn btn-primary">Guardar</button>
            </div>*@
        </div>
    </div>
</div>

@code {
    [Parameter] public string id { get; set; } = "componenteModal";
    [Parameter] public string titulo { get; set; } = "Titulo";    
    [Parameter] public  SizeModal? sizeModal { get; set; }
    [Parameter] public RenderFragment ChildContent { get; set; }

    private string _sizeModal  
    { 
        get
        {
            
                switch (sizeModal)
                {
                    case SizeModal.small:
                        return "modal-sm";                 
                    case SizeModal.large:
                        return "modal-lg";
                    case SizeModal.extralarge:
                        return "modal-xl";
                    default:
                        return "";
                }
        }
                
    } 


    //bloquear que se cierre el modal al dar click fuera del modal
    [Parameter] public bool? bloquearCerrar { get; set; } = false;
    
    
    private bool _bloquearCerrar
    {
        get
        {
            return bloquearCerrar ?? false;
        }
    }
    

  
   
   
    public async Task AbrirModal()
    {
        //show modal anulacion

        //abrir modal
        var js = $"$('#{id}').modal('show');";
        await JSRuntime.InvokeVoidAsync("eval", js);

    }

    public async Task CerrarModal()
    {
        //cerrar modal
        var js = $"$('#{id}').modal('hide');";
        await JSRuntime.InvokeVoidAsync("eval", js);
    }
    
}